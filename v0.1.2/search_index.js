var documenterSearchIndex = {"docs":
[{"location":"#CompressHashDisplace.jl","page":"Home","title":"CompressHashDisplace.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> ] add CompressHashDisplace","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using BenchmarkTools\nusing CompressHashDisplace\n\nDICTIONARY = \"/usr/share/dict/words\"\ndict = Dict{String, Int}()\n\nfor (line, word) in enumerate(readlines(DICTIONARY))\n    dict[word] = line\nend\n\nfrozen_dict = FrozenDict(dict)\nfrozen_dict[\"hello\"] # 50196\n\nfrozen_unsafe_dict = FrozenUnsafeDict(dict)\nfrozen_unsafe_dict[\"hello\"] # 50196\n\nword = \"hello\"\n@btime $dict[$word]               # 76.615 ns (0 allocations: 0 bytes)\n@btime $frozen_dict[$word]        # 60.028 ns (0 allocations: 0 bytes)\n@btime $frozen_unsafe_dict[$word] # 22.124 ns (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Main difference between FrozenDict and FrozenUnsafeDict is that FrozenUnsafeDict do not validate input key","category":"page"},{"location":"","page":"Home","title":"Home","text":"frozen_dict[\"foo\"]         # KeyError: key \"foo\" not found\nfrozen_unsafe_dice[\"foo\"]  # 59716, i.e. some random value","category":"page"},{"location":"#Methods","page":"Home","title":"Methods","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [CompressHashDisplace]","category":"page"},{"location":"#CompressHashDisplace.FrozenDict-Union{Tuple{Dict{K,V}}, Tuple{V}, Tuple{K}} where V where K","page":"Home","title":"CompressHashDisplace.FrozenDict","text":"FrozenDict(dict)\n\nComputes a perfect hash table using given dict. It returns read-only dictionary.\n\n\n\n\n\n","category":"method"},{"location":"#CompressHashDisplace.FrozenUnsafeDict-Union{Tuple{Dict{K,V}}, Tuple{V}, Tuple{K}} where V where K","page":"Home","title":"CompressHashDisplace.FrozenUnsafeDict","text":"FrozenUnsafeDict(dict)\n\nComputes a perfect hash table using given dict. FrozenUnsafeDict do not hold key values, and wouldn't do any validations during lookup procedure.\n\n\n\n\n\n","category":"method"}]
}
